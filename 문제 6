문제 6. static 메소드로 이루어진 ArrayInt 클래스를 작성하고, 이를 활용하는 main) 메소드를 작성하여 잘 동작함을 보여라
copy(int a[], int b[]) // 배열 a를 배열 b에 복사
compare(int a[], int b[]) // 배열 a와 b를 비교하여 true, false 리턴
sum(int a[]) // 배열 a의 합을 리턴
toString(int a[]) // String[]을 리턴
sort(int a[]) // 배열 a[]를 정렬하여 리턴
merge(int a[], int b[]) // 배열 a와 b를 정렬하여 새로 정렬된 배열을 리턴

import java.util.*;

public class ArrayInt {
	public static void main(String[] args) {
		Scanner scanner = new Scanner(System.in);
		
		System.out.print("배열의 크기를 정하세요.>> ");
		int index = scanner.nextInt();
		int arr[] = new int[index];
		
		System.out.print("숫자는 자동으로 결정됩니다. 결정된 숫자>> ");
		for(int i = 0; i < index; i++) {
			arr[i] = (int)(Math.random() * 200 + 1);
			System.out.print(arr[i] + " ");
		}
		System.out.println();
		
		System.out.print("기존 배열이 새로운 배열에 복사됩니다.>> ");
		int newArr[] = new int[index];
		copy(arr, newArr);
		for(int i = 0; i < newArr.length; i++) {
			System.out.print(newArr[i] + " ");
		}
		System.out.println();
		
		boolean check = compare(arr, newArr);
		if(check == true) {
			System.out.println("기존 배열과 새로 복사한 배열은 같습니다.");
		}
		else if(check == false) {
			System.out.println("기본 배열과 새로운 배열은 다릅니다.");
		}
		
		System.out.println("기존 배열의 합은 " + sum(arr) + "입니다.");
		
		System.out.print("문자열로 변경된 배열>> ");
		toString(arr);
		System.out.print("[");
		for(int i = 0; i < arr.length; i++) {
			if(i < arr.length - 1) {
				System.out.print(arr[i] + ", ");
			}
			else if(i == arr.length - 1) {
				System.out.println(arr[i] + "]");
			}
		}
		
		System.out.print("정렬된 배열>> ");
		sort(arr);
		for(int i = 0; i < arr.length; i++) {
			System.out.print(arr[i] + " ");
		}
		System.out.println();

		System.out.print("merge를 위한 배열을 생성합니다>> ");
		int merArr[] = new int[index];
		int newMerArr[] = new int[index * 2];
		for(int i = 0; i < index; i++) {
			merArr[i] = (int)(Math.random() * 200 + 1);
			System.out.print(merArr[i] + " ");
		}
		System.out.println();
		System.out.print("두 개의 배열을 합치고 정렬된 배열입니다>> ");
		newMerArr = merge(arr, merArr);
		for(int i = 0; i < newMerArr.length; i++) {
			System.out.print(newMerArr[i] + " ");
		}
	}
	
	public static void copy(int a[], int b[]) {
		for(int i = 0; i < a.length; i++) {
			b[i] = a[i];
		}
	}
	
	public static boolean compare(int a[], int b[]) {
		boolean check = false;
		for(int i = 0; i < a.length; i++) {
			if(a[i] != b[i])
				return false;
		}
		return true;
	}
	
	public static int sum(int a[]) {
		int sum = 0;
		for(int i = 0; i < a.length; i++) {
			sum += a[i];
		}
		return sum;
	}
	
	public static String[] toString(int a[]) {
		String[] sArr = new String[a.length];
		for(int i = 0; i < a.length; i++) {
			sArr[i] = Integer.toString(a[i]);
		}
		return sArr;
	}
	
	public static int[] sort(int a[]) {
		Arrays.sort(a);
		return a;
	}
	
	public static int[] merge(int a[], int b[]) {
		int newArr[] = new int[a.length + b.length];
		for(int i = 0; i < a.length; i++) {
			newArr[i] = a[i];
		}
		for(int i = 0; i < b.length; i++) {
			newArr[a.length + i] = b[i];
		}
		Arrays.sort(newArr);
		return newArr;
	}
}
